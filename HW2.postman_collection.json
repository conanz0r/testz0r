{
	"info": {
		"_postman_id": "9848458e-f4ac-4ac8-8ecb-10b32a24414f",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "REQ_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body contains correctly string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "REQ_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respBody = pm.response.json();\r",
							"\r",
							"pm.test(\"My name\", function () { \r",
							"    pm.expect(respBody.name).to.eql(\"Alesha\");\r",
							"});\r",
							"\r",
							"pm.test(\"My age\", function () {\r",
							"    pm.expect(respBody.age).to.eql(\"28\");\r",
							"});\r",
							"\r",
							"pm.test(\"My salary\", function () {\r",
							"    pm.expect(respBody.salary).to.eql(600);\r",
							"});\r",
							"\r",
							"var reqBody = request.data;\r",
							"\r",
							"pm.test(\"My name from request\", function (){\r",
							"    pm.expect(respBody.name).to.eql(reqBody.name);\r",
							"});\r",
							"\r",
							"pm.test(\"My age from request\", function() {\r",
							"    pm.expect(respBody.age).to.eql(reqBody.age);\r",
							"});\r",
							"\r",
							"pm.test(\"My salary from request\", function () {\r",
							"    pm.expect(respBody.salary).to.eql(+reqBody.salary);\r",
							"});\r",
							"\r",
							"console.log(respBody.family);\r",
							"\r",
							"pm.test(\"My salary after 1,5 years\", function (){\r",
							"    pm.expect(respBody.family.u_salary_1_5_year).to.eql(reqBody.salary*4);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alesha",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "600",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "REQ_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respBody = pm.response.json();\r",
							"var reqName = pm.request.url.query.get(\"name\");\r",
							"var reqAge = pm.request.url.query.get(\"age\");\r",
							"var reqSalary = pm.request.url.query.get(\"salary\");\r",
							"\r",
							"pm.test(\"Name from response = name from request\", function (){\r",
							"    pm.expect(respBody.name).to.eql(reqName);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from response = age from request\", function (){\r",
							"    pm.expect(respBody.age).to.eql(reqAge);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary from response = salary from request\", function(){\r",
							"    pm.expect(respBody.salary).to.eql(+reqSalary);\r",
							"});\r",
							"\r",
							"console.log(respBody.family);\r",
							"\r",
							"pm.test(\"Dog has a name\", function(){\r",
							"    pm.expect(respBody.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"\r",
							"pm.test(\"Dog has an age\",function(){\r",
							"    pm.expect(respBody.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"pm.test(\"Dog name is Luky\", function () {\r",
							"    pm.expect(respBody.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Age Luky is 4\", function () {\r",
							"    pm.expect(respBody.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Alesha&age=28&salary=600",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesha"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "REQ_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respBody = pm.response.json();\r",
							"var reqName = pm.request.url.query.get(\"name\");\r",
							"var reqAge = pm.request.url.query.get(\"age\");\r",
							"var reqSalary = pm.request.url.query.get(\"salary\");\r",
							"\r",
							"pm.test(\"Name from response = Name from request\", function(){\r",
							"    pm.expect(respBody.name).to.eql(reqName);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from response = Age from request\", function(){\r",
							"    pm.expect(respBody.age).to.eql(+reqAge);\r",
							"});\r",
							"\r",
							"console.log(reqSalary);\r",
							"console.log(respBody.salary);\r",
							"console.log(respBody.salary[0]);\r",
							"console.log(respBody.salary[1]);\r",
							"console.log(respBody.salary[2]);\r",
							"\r",
							"pm.test(\"Salary [0] from response = Salary from request\", function(){\r",
							"    pm.expect(respBody.salary[0]).to.eql(+reqSalary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary [1] from response = Salary*2 from request\", function(){\r",
							"    pm.expect(Number(respBody.salary[1])).to.eql(Number(reqSalary*2));\r",
							"});\r",
							"\r",
							"pm.test(\"Salary [2] from response = Salary*3 from request\", function(){\r",
							"    pm.expect(parseInt(respBody.salary[2])).to.eql(parseInt(reqSalary*3));\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", reqName);\r",
							"pm.environment.set(\"age\", reqAge);\r",
							"pm.environment.set(\"salary\", reqSalary);\r",
							"\r",
							"var testArr = [respBody.salary[0], respBody.salary[1], respBody.salary[2]];\r",
							"for (var i of testArr) {\r",
							"    console.log(i);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Alesha&age=28&salary=600",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesha"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "REQ_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var respData = pm.response.json();\r",
							"var reqData = request.data;\r",
							"\r",
							"pm.test(\"JSON has a start_qa_salary\", function(){\r",
							"    pm.expect(respData).to.have.property('start_qa_salary');\r",
							"});\r",
							"\r",
							"pm.test(\"JSON has a qa_salary_after_6_months\", function(){\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"\r",
							"pm.test(\"JSON has a qa_salary_after_12_months\",function(){\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"\r",
							"pm.test(\"JSON has a qa_salary_after_1.5_year\",function(){\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"\r",
							"pm.test(\"JSON has a qa_salary_after_3.5_years\",function(){\r",
							"    pm.expect(respData).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"\r",
							"pm.test(\"JSON has a person\", function(){\r",
							"    pm.expect(respData).to.have.property('person');\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary = salary from request\", function(){\r",
							"    pm.expect(respData.start_qa_salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = salary*2 from request\", function(){\r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(reqData.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7 from request\", function(){\r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(reqData.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_years = salary*3.3 from request\", function(){\r",
							"    pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(reqData.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8 from request\", function(){\r",
							"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(reqData.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name salary from response = salary from request\", function (){\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age from response - u_age from request\", function (){\r",
							"    pm.expect(respData.person.u_age).to.eql(+reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years from response = salary*4.2 from request\", function(){\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(reqData.salary*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"var testArr2 = [respData.person.u_age, respData.person.u_name[0],  respData.person.u_name[1], respData.person.u_name[2], respData.person.u_salary_5_years];\r",
							"for (var i of testArr2) {\r",
							"    console.log(i);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}